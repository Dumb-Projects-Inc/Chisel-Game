name: Scala

permissions:
  actions: write
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "**/*.scala"
  pull_request:
    branches:
      - master
    paths:
      - "**/*.scala"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: nixbuild/nix-quick-install-action@v30
        name: Install Nix
      - uses: nix-community/cache-nix-action@v6
        name: Cache Nix store
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
      - name: Cache SBT dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/build.sbt', 'project/plugins.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-
      - name: Format with scalafmt
        run: nix develop . --command sbt scalafmtCheckAll

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: nixbuild/nix-quick-install-action@v30
        name: Install Nix
      - uses: nix-community/cache-nix-action@v6
        name: Cache Nix Store
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
      - name: Cache SBT dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: sbt-${{ runner.os }}-${{ hashFiles('**/build.sbt', 'project/plugins.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-
      - name: Run sbt tests
        run: nix develop . --command sbt clean coverage test coverageReport
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  dependency-graph:
    name: Update Dependency Graph
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: sbt/setup-sbt@v1
      - uses: scalacenter/sbt-dependency-submission@v2
